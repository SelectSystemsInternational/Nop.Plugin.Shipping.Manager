@model CheckoutCompletedModel

@using Nop.Core.Infrastructure;
@using Nop.Services.Orders
@using Nop.Services.Security
@using Nop.Plugin.Shipping.Manager.Settings;
@using Nop.Plugin.Apollo.Integrator

@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-checkout-page");
    NopHtml.AppendPageCssClassParts("html-order-completed-page");
    var checksum = "";

	var encryptionService = EngineContext.Current.Resolve<IEncryptionService>();
    var shippingManagerSettings = EngineContext.Current.Resolve<ShippingManagerSettings>();
    var orderService = EngineContext.Current.Resolve<IOrderService>();
    var order = await orderService.GetOrderByCustomOrderNumberAsync(@Model.CustomOrderNumber);
    if (order != null)
    {
        if (shippingManagerSettings.EncryptServicePointPost)
        {
			checksum = encryptionService.EncryptText(order.OrderGuid.ToString());
        }
        else
        {
            checksum = order.CustomOrderNumber;
        }
    }
}
<div class="page checkout-page order-completed-page">
    @if (!Model.OnePageCheckoutEnabled)
    {
        @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Complete })
    }
    <div class="page-title">
        <h1>@T("Checkout.ThankYou")</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
        <div class="section order-completed">
            <div class="title">
                <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong>
            </div>
            <div class="details">
                <div class="order-number">
                    <input type="hidden" id="customOrderNumber" value="@Model.CustomOrderNumber" />
                    <input type="hidden" id="checksum" value="@checksum" />
                    <strong>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</strong>
                </div>
                <div class="details-link">
                    <a href="@Url.RouteUrl("OrderDetails", new { orderID = Model.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                </div>
            </div>
            <div class="buttons">
                <input type="button" value="@T("Checkout.ThankYou.Continue")" class="button-1 order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("Homepage")')" />
            </div>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
    </div>
</div>
