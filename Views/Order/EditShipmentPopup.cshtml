@model Nop.Plugin.Shipping.Manager.Models.Order.OrderShipmentModel

@using System.Text
@using Nop.Core.Domain.Common;
@inject AdminAreaSettings adminAreaSettings

@using Nop.Plugin.Shipping.Manager.Models;
@using Nop.Plugin.Shipping.Manager.Settings;
@inject ShippingManagerSettings shippingManagerSettings

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminPopupLayout.cshtml";
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    //page title
    ViewBag.PageTitle = string.Format(T("Plugins.Shipping.Manager.Orders.Shipments.Edit.Title").Text, Model.CustomOrderNumber);
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Nop.Plugins.Shipping.Manager.Shipments");

    var itemsFromMultipleWarehouses = Model.Items
        .Where(x => x.AllowToChooseWarehouse && x.AvailableWarehouses.Count > 0)
        .ToList();

    var useSendcloud = false;

    if (ViewBag.RefreshPage == true)
    {
        <script type="text/javascript">
            try 
            {
                $("#@(ViewBag.BtnId)", window.opener.document).click();
            }
            catch (e) 
            {
                Console.log(e);
            }
            window.close();
        </script>
    }
}

<form asp-controller="OrderSales" asp-action="EditShipment" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @string.Format(T("Plugins.Shipping.Manager.Orders.Shipments.Edit.Title").Text, Model.CustomOrderNumber)
        </h1>
        <div class="float-right">
            <button type="submit" id="shipment-save" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            <nop-action-confirmation asp-button-id="shipment-save" asp-additional-confirm="Admin.Orders.Shipments.Products.Warehouse.QuantityNotEnough" />
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.OrderShipmentAddButtons })
        </div>
    </div>
    <div asp-validation-summary="All"></div>

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="OrderId" />
    <input type="hidden" asp-for="BtnId" />

    <div class="content">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default">
                    <div class="card-body">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="TrackingNumber" />
                            </div>
                            <div class="col-md-3">
                                <nop-editor asp-for="TrackingNumber" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="ShippingMethodId" />
                            </div>
                            <div class="col-md-6">
                                <nop-select asp-for="ShippingMethodId" asp-items="Model.AvailableShippingMethods" />
                            </div>
                        </div>
                        @if (useSendcloud)
                        {
                            <div class="form-group row">
                                <div class="col-md-3">
                                    <nop-label asp-for="ServicePointId" />
                                </div>
                                <div class="col-md-2">
                                    <nop-editor asp-for="ServicePointId" />
                                </div>
                                <div class="col-md-2">
                                    <nop-label asp-for="ServicePointPOBox" />
                                </div>
                                <div class="col-md-2">
                                    <nop-editor asp-for="ServicePointPOBox" />
                                </div>
                            </div>
                        }
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="AdminComment" />
                            </div>
                            <div class="col-md-6">
                                <nop-editor asp-for="AdminComment" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="CanShip" />
                            </div>
                            <div class="col-md-3">
                                <nop-editor asp-for="CanShip" />
                            </div>
                        </div>
                        <nop-nested-setting asp-for="CanShip">
                            <div class="form-group row" id="pnlHasDelivery">
                                <div class="col-md-3">
                                    <nop-label asp-for="CanDeliver" />
                                </div>
                                <div class="col-md-3">
                                    <nop-editor asp-for="CanDeliver" />
                                </div>
                            </div>
                        </nop-nested-setting>
                    </div>
                    <script>
                        $(document).ready(function () {
                            $("#shipment-save").bind("focus", function () {
                                if (validateWarehouseAvailability("save")) {
                                    $("#shipment-save-action-confirmation").remove();
                                    $(this).attr("name", "save").attr("type", "submit");
                                }
                            }).bind("click", function () {
                                return validateWarehouseAvailability("save");
                            });


                            $("#@Html.IdFor(model => model.CanShip)").click(toggleDelivery);
                            toggleDelivery();

                        });

                        function toggleDelivery() {
                            if ($('#@Html.IdFor(model => model.CanShip)').is(':checked')) {
                                $('#pnlHasDelivery').show();
                            }
                            else {
                                $('#pnlHasDelivery').hide();
                            }
                        }

                        function validateWarehouseAvailability(action) {
                        @{
                            var sb = new StringBuilder();
                            var count = itemsFromMultipleWarehouses.Count;
                            if (count == 0)
                            {
                                sb.Append("true");
                            }
                            else
                            {
                                for (var i = 0; i <= count - 1; i++)
                                {
                                    var item = itemsFromMultipleWarehouses[i];
                                    sb.AppendFormat("validateAvailableQuantity('{0}')", item.OrderItemId);
                                    if (i != count - 1)
                                    {
                                        sb.Append(" && ");
                                    }
                                }
                            }
                        }
                                                    var valid = @(Html.Raw(sb.ToString()));
                            if (!valid) {
                                if (action === "save") {
                                    $('#shipment-save-action-confirmation').modal('toggle');
                                }
                                return false;
                            }
                            return true;
                        }

                        function validateAvailableQuantity(orderItemId) {
                            var enteredValue = parseInt($('#qtyToAdd' + orderItemId).val(), 10);
                            if (enteredValue <= 0)
                                return true;
                            var reservedValue = parseInt($('#warehouse_' + orderItemId).find(':selected').data('reserved-qty'), 10);
                            var plannedValue = parseInt($('#warehouse_' + orderItemId).find(':selected').data('planned-qty'), 10);
                            var toshipValue = parseInt($('#warehouse_' + orderItemId).find(':selected').data('toship-qty'), 10);
                            var availableToAdd = reservedValue - plannedValue + toshipValue;
                            return enteredValue <= availableToAdd;
                        }
                    </script>
                </div>

                <div class="card card-default">
                    <div class="card-header">
                        @T("Admin.Orders.Shipments.Products")
                    </div>
                    <div class="card-body">
                        <table class="table table-hover table-bordered">
                            <thead>
                                <tr>
                                    <th>
                                        @T("Admin.Orders.Shipments.Products.ProductName")
                                    </th>
                                    <th>
                                        @T("Admin.Orders.Shipments.Products.Warehouse")
                                    </th>
                                    <th class="text-center">
                                        @T("Admin.Orders.Shipments.Products.QtyOrdered")
                                    </th>
                                    <th class="text-center">
                                        @T("Plugins.Shipping.Manager.Products.OrderQtyShipped")
                                    </th>
                                    <th class="text-center">
                                        @T("Admin.Orders.Shipments.Products.QtyShipped")
                                    </th>
                                    <th>
                                        @T("Admin.Orders.Shipments.Products.QtyToShip")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td style="width: 20%;" class="text-left">
                                            <em>@item.ProductName</em>
                                            @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                            {
                                                <p>
                                                    @Html.Raw(item.AttributeInfo)<br />
                                                    <b>@T("Admin.Orders.Shipments.Products.ItemWeight")</b>: @Html.Raw(item.ItemWeight)<br />
                                                    <b>@T("Admin.Orders.Shipments.Products.ItemDimensions")</b>: @Html.Raw(item.ItemDimensions)
                                                </p>
                                            }
                                            @if (item.ShipSeparately)
                                            {
                                                <p>
                                                    <strong>@T("Admin.Orders.Shipments.Products.ShipSeparately.Warning")</strong>
                                                    @T("Admin.Orders.Shipments.Products.ShipSeparately")
                                                </p>
                                            }
                                        </td>
                                        <td style="width: 30%;">
                                            @if (item.AllowToChooseWarehouse)
                                            {
                                                if (item.AvailableWarehouses.Count > 0)
                                                {
                                                    <select name="warehouse_@(item.OrderItemId)" id="warehouse_@(item.OrderItemId)" class="form-control">
                                                        @foreach (var warehouse in item.AvailableWarehouses)
                                                        {
                                                            <option value="@warehouse.WarehouseId" data-stock-qty="@warehouse.StockQuantity" data-reserved-qty="@warehouse.ReservedQuantity"
                                                                    data-planned-qty="@warehouse.PlannedQuantity" data-toship-qty="@warehouse.ToShipQuatity" selected=@warehouse.IsPreSelected>
                                                                @T("Plugins.Shipping.Manager.Products.Warehouse.ChooseQty", warehouse.WarehouseName, warehouse.StockQuantity,
                                                                         warehouse.ReservedQuantity, warehouse.PlannedQuantity, warehouse.ToShipQuatity)
                                                            </option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    @T("Admin.Orders.Shipments.Products.Warehouse.NotAvailabe")
                                                }
                                            }
                                            else
                                            {
                                                //display warehouses
                                                foreach (var warehouse in item.AvailableWarehouses)
                                                {
                                                    <div>@warehouse.WarehouseName</div>
                                                }
                                            }
                                        </td>
                                        <td style="width: 10%;" class="text-center">
                                            @item.QuantityOrdered
                                        </td>
                                        <td style="width: 12%;" class="text-center">
                                            @item.QuantityInAllShipments
                                        </td>
                                        <td style="width: 10%;" class="text-center">
                                            @item.QuantityInShipment
                                        </td>
                                        <td style="width: 10%;" class="text-center">
                                            <input name="qtyToAdd@(item.OrderItemId)" type="text" value="@item.QuantityToAdd" id="qtyToAdd@(item.OrderItemId)" class="form-control input-sm" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
